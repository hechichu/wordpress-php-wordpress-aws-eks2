apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: web-server
  name: my-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: web-server
  type: LoadBalancer
status:
  loadBalancer: {}
---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: my-config-map
#data:
#  port: 80 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
  namespace: web-app
  labels: 
    app: web-server
spec:
  selector:
    matchLabels:
      app: web-server
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web-server
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: web-server
        image: nginx:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        ports:
        - containerPort: 80          
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: web-app
  name: my-local-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath: 
      path: /home/ubuntu/new-era

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: web-app
  name: my-local-pv
spec: 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      type: local
